C51 COMPILER V9.00   EEPROM                                                                02/02/2018 20:55:55 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN eeprom.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE eeprom.c OPTIMIZE(0,SPEED) BROWSE INCDIR(D:\Keil\C51\INC) DEBUG OBJECTEXTEN
                    -D

line level    source

   1          #include "eeprom.h"
   2          #include "intrins.h"
   3          
   4          typedef unsigned char BYTE;
   5          typedef unsigned int WORD;
   6          
   7          /**/
   8          sfr IAP_DATA = 0xC2;
   9          sfr IAP_ADDRH = 0xC3;
  10          sfr IAP_ADDRL = 0xC4;
  11          sfr IAP_CMD = 0xC5;
  12          sfr IAP_TRIG = 0xC6;
  13          sfr IAP_CONTR = 0xC7;
  14          
  15          #define CMD_IDLE     0
  16          #define CMD_READ     1
  17          #define CMD_PROGRAM  2
  18          #define CMD_ERASE    3
  19          
  20          //#define ENABLE_IAP  0x81 // if SYSCLK < 24MHZ
  21          #define ENABLE_IAP  0x82 // if SYSCLK < 20MHZ
  22          
  23          
  24          #define IAP_ADDRESS 0x0000
  25          
  26          void IapIdle ()
  27          {
  28   1              IAP_CONTR = 0;
  29   1              IAP_CMD = 0;
  30   1              IAP_TRIG = 0;
  31   1              IAP_ADDRH = 0x80;
  32   1              IAP_ADDRL = 0;
  33   1      }
  34          
  35          BYTE ByteRead (WORD addr) {
  36   1              BYTE dat;
  37   1      
  38   1              IAP_CONTR = ENABLE_IAP;
  39   1              IAP_CMD=CMD_READ;
  40   1              IAP_ADDRL=addr;
  41   1              IAP_ADDRH=addr>>8;
  42   1              IAP_TRIG=0x5a;
  43   1              IAP_TRIG=0xa5;
  44   1      
  45   1              _nop_();
  46   1      
  47   1              dat = IAP_DATA;
  48   1              IapIdle();
  49   1      
  50   1              return dat;
  51   1      }
  52          
  53          void IapProgramByte(WORD addr, BYTE dat) {
  54   1              IAP_CONTR=ENABLE_IAP;
C51 COMPILER V9.00   EEPROM                                                                02/02/2018 20:55:55 PAGE 2   

  55   1              IAP_CMD=CMD_PROGRAM;
  56   1              IAP_ADDRL=addr;
  57   1              IAP_ADDRH=addr>>8;
  58   1              IAP_DATA=dat;
  59   1              IAP_TRIG=0x5a;
  60   1              IAP_TRIG=0xa5;
  61   1      }
  62          
  63          
  64          void IapEraseSector(WORD addr)
  65          {
  66   1              IAP_CONTR=ENABLE_IAP;
  67   1              IAP_CMD=CMD_ERASE;
  68   1              IAP_ADDRL=addr;
  69   1              IAP_ADDRH=addr>>8;
  70   1              IAP_TRIG=0x5a;
  71   1              IAP_TRIG=0xa5;
  72   1      
  73   1              _nop_();
  74   1              IapIdle();
  75   1      }
  76          
  77          
  78          /*
  79          void ISP_IAP_enable(void)
  80          {
  81                  EA      =       0;                                                              //* 关中断 
  82                  ISP_CONTR       =       ISP_CONTR & 0xf8;       // 1111,1000 
  83                  ISP_CONTR       =       ISP_CONTR | WAIT_TIME;  // 设置等待时间 
  84                  ISP_CONTR       =       ISP_CONTR | 0x80;       //* 1000,0000 允许ISP/IAP操作   
  85          }
  86          
  87          
  88          void ISP_IAP_disable(void)
  89          {
  90                  ISP_CONTR       =       0x00;   
  91                  ISP_CMD     =   0x00;
  92                  ISP_TRIG        =       0x00;
  93                  ISP_ADDRH   =   0x80;
  94                  ISP_ADDRL   =   0x00;
  95                  EA      =   1;                  //* 开中断 
  96          }
  97          
  98          unsigned char ByteRead(unsigned int addr)   
  99          {
 100              ISP_IAP_enable();
 101          
 102                  ISP_ADDRL=addr;
 103              ISP_ADDRH=addr>>8;   
 104          
 105                  ISP_CMD = ISP_CMD & 0xfc;           //1111,1100  
 106              ISP_CMD = ISP_CMD | ISP_BYTE_READ;  //0000,0001 送字节读命令
 107                   
 108              ISP_TRIG = 0x5A;
 109              ISP_TRIG = 0xA5;
 110          
 111              _nop_();
 112          
 113              ISP_IAP_disable();
 114          
 115              return  ISP_DATA;
 116          }
C51 COMPILER V9.00   EEPROM                                                                02/02/2018 20:55:55 PAGE 3   

 117          
 118          
 119          void ByteProgram(unsigned int addr,unsigned char input_data) 
 120          {       
 121              ISP_IAP_enable();
 122          
 123              ISP_DATA=input_data;
 124          
 125              ISP_ADDRL=addr;
 126              ISP_ADDRH=addr>>8;
 127          
 128              ISP_CMD = ISP_CMD & 0xfc;        //* 1111,1100 
 129              ISP_CMD = ISP_CMD | ISP_BYTE_PROGRAM;       //* 0000,0010 送字节写命令
 130          
 131              ISP_TRIG=0x5A;
 132              ISP_TRIG=0xA5;
 133          
 134              _nop_();
 135          
 136              ISP_IAP_disable();
 137          }
 138          
 139          
 140          void SectorErase(unsigned int sector_addr)   //擦除一个区
 141          {
 142                  unsigned int get_sector_addr = 0;
 143                  ISP_IAP_enable();
 144          
 145              get_sector_addr = (sector_addr & 0xfe00);  // 1111,1110,0000,0000; 取扇区起始地址 
 146              ISP_ADDRH = (get_sector_addr >> 8);
 147              ISP_ADDRL = 0x00;  
 148              
 149              ISP_CMD = ISP_CMD & 0xfc;   // 1111,1100 
 150              ISP_CMD = ISP_CMD | ISP_SECTOR_ERASE;       // 0000,0011 
 151                 
 152              ISP_TRIG=0x5A;
 153              ISP_TRIG=0xA5;
 154          
 155              _nop_();
 156          
 157              ISP_IAP_disable();
 158          }
 159          */
 160          
 161          static unsigned char i;
 162          /*************************************
 163          * *功能： 将时间值，温度值写入 eeprom
 164          *************************************/
 165          void write_eeprom_time_temp () {
 166   1              //写设定的最高温度值
 167   1              //SectorErase(T_S);
 168   1              //ByteProgram (T_S, gSetTmpH);
 169   1               
 170   1              IapEraseSector(T_S);
 171   1              IapProgramByte(T_S, gSetTmpH);
 172   1              IapProgramByte(T_G, gSetTmpL);
 173   1      
 174   1              IapProgramByte(LAST_WORK_MODE, work_mode);
 175   1              IapProgramByte(HAVE_SET_TIME, 1);
 176   1      
 177   1              for (i=0; i<2; i++) 
 178   1                       IapProgramByte(T_SET + i, set_start_time[4+i]);         
C51 COMPILER V9.00   EEPROM                                                                02/02/2018 20:55:55 PAGE 4   

 179   1              for (; i<4; i++) 
 180   1                      IapProgramByte(T_SET + i, set_start_time2[2+i]);        
 181   1              for (; i<6; i++) 
 182   1                      IapProgramByte(T_SET + i, set_start_time3[i]); 
 183   1      
 184   1      
 185   1              //写设定的起始与结束时间值
 186   1              //IapEraseSector(S_HOUR_S);
 187   1              for (i=0; i<4; i++)   
 188   1                      IapProgramByte (S_HOUR_S + i, set_start_time [i]);              
 189   1              for (; i<8; i++)     
 190   1                      IapProgramByte (S_HOUR_S + i, set_stop_time [i-4]); 
 191   1      
 192   1              for (; i<12; i++)     
 193   1                      IapProgramByte (S_HOUR_S + i, set_start_time2 [i-8]); 
 194   1              for (; i<16; i++)     
 195   1                      IapProgramByte (S_HOUR_S + i, set_stop_time2 [i-12]);
 196   1                      
 197   1              for (; i<20; i++)     
 198   1                      IapProgramByte (S_HOUR_S + i, set_start_time3 [i-16]); 
 199   1              for (; i<24; i++)     
 200   1                      IapProgramByte (S_HOUR_S + i, set_stop_time3 [i-20]);                  
 201   1              
 202   1      
 203   1      }
 204          
 205          /*************************************
 206          * *功能： 从 eeprom 读出 将时间值，温度值
 207          *************************************/
 208          void read_eeprom_time_temp () {
 209   1              
 210   1              work_mode = ByteRead ( LAST_WORK_MODE );
 211   1              if ( work_mode >= 7) { // 芯片第一次上电
 212   2                       work_mode = 4;
 213   2                       return;
 214   2              }
 215   1              have_set_time =  ByteRead(HAVE_SET_TIME);
 216   1              gSetTmpH = ByteRead (T_S);
 217   1              if (gSetTmpH == 0) gSetTmpH = 5;
 218   1              gSetTmpL = ByteRead (T_G);
 219   1      
 220   1              for (i=0; i<2; i++) 
 221   1                      set_start_time[4+i] = ByteRead(T_SET + i);         
 222   1              for (; i<4; i++) 
 223   1                      set_start_time2[2+i] = ByteRead(T_SET + i);        
 224   1              for (; i<6; i++) 
 225   1                      set_start_time3[i] = ByteRead(T_SET + i);       
 226   1      
 227   1              //读eeprom中设定的起始和结束时间值
 228   1              for (i=0; i<4; i++)                 
 229   1                      set_start_time [i] = ByteRead (S_HOUR_S + i);
 230   1              for (; i<8; i++)                    
 231   1                      set_stop_time [i-4] = ByteRead (S_HOUR_S + i);
 232   1      
 233   1              for (; i<12; i++)                    
 234   1                      set_start_time2 [i-8] = ByteRead (S_HOUR_S + i);
 235   1              for (; i<16; i++)                    
 236   1                      set_stop_time2 [i-12] = ByteRead (S_HOUR_S + i);
 237   1              
 238   1              for (; i<20; i++)                    
 239   1                      set_start_time3 [i-16] = ByteRead (S_HOUR_S + i);
 240   1              for (; i<24; i++)                    
C51 COMPILER V9.00   EEPROM                                                                02/02/2018 20:55:55 PAGE 5   

 241   1                      set_stop_time3 [i-20] = ByteRead (S_HOUR_S + i);
 242   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    850    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
